{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,sJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,sJAAA,CAAA,SAAM"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/colorscale.jsx"],"sourcesContent":["import * as d3 from \"d3\";\nimport { useEffect, useRef } from \"react\";\n\nconst COLOR_LEGEND_MARGIN = { top: 38, right: 0, bottom: 38, left: 90 };\n\nexport default function ColorLegend(props) {\n  const width = props.width\n  const height = props.height\n\n  const canvasRef = useRef(null);\n\n  const boundsWidth =\n    props.width - COLOR_LEGEND_MARGIN.right - COLOR_LEGEND_MARGIN.left;\n  const boundsHeight =\n    props.height - COLOR_LEGEND_MARGIN.top - COLOR_LEGEND_MARGIN.bottom;\n\n  const domain = props.colorScale.domain();\n  const max = domain[0];\n  const xScale = d3.scaleLinear().range([0, boundsWidth]).domain([0, max]);\n\n  const allTicks = xScale.ticks(9).map((tick, i) => {\n    return (\n      <g key={`tick-${i}`}>\n        <line\n          key={`line-${i}`}\n          x1={xScale(tick)}\n          x2={xScale(tick)}\n          y1={0}\n          y2={boundsHeight + 10}\n          stroke=\"black\"\n        />\n        <text\n          key={`key-${i}`}\n          x={xScale(tick)}\n          y={boundsHeight + 25}\n          fontSize={10}\n          textAnchor=\"middle\"\n        >\n          {tick + \"s\"}\n        </text>\n      </g>\n    );\n  });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      console.log(canvas)\n    }\n    const context = canvas?.getContext(\"2d\");\n\n    if (!context) {\n      return;\n    }\n\n    for (let i = 0; i < boundsWidth; ++i) {\n      context.fillStyle = props.colorScale((max * i) / boundsWidth);\n      context.fillRect(i, 0, 1, boundsHeight);\n    }\n  }, [props.width, props.height, props.colorScale]);\n\n  return (\n    <div style={{ width, height }}>\n      <div\n        style={{\n          position: \"relative\",\n          transform: `translate(${COLOR_LEGEND_MARGIN.left}px,\n            ${COLOR_LEGEND_MARGIN.top}px`,\n        }}\n      >\n        <canvas ref={canvasRef} width={boundsWidth} height={boundsHeight} />\n        <svg\n          width={boundsWidth}\n          height={boundsHeight}\n          style={{ position: \"absolute\", top: 0, left: 0, overflow: \"visible\" }}\n        >\n          {allTicks}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;;AAGA,MAAM,sBAAsB;IAAE,KAAK;IAAI,OAAO;IAAG,QAAQ;IAAI,MAAM;AAAG;AAEvD,SAAS,YAAY,KAAK;IACvC,MAAM,QAAQ,MAAM,KAAK;IACzB,MAAM,SAAS,MAAM,MAAM;IAE3B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEzB,MAAM,cACJ,MAAM,KAAK,GAAG,oBAAoB,KAAK,GAAG,oBAAoB,IAAI;IACpE,MAAM,eACJ,MAAM,MAAM,GAAG,oBAAoB,GAAG,GAAG,oBAAoB,MAAM;IAErE,MAAM,SAAS,MAAM,UAAU,CAAC,MAAM;IACtC,MAAM,MAAM,MAAM,CAAC,EAAE;IACrB,MAAM,SAAS,mIAAG,WAAW,GAAG,KAAK,CAAC;QAAC;QAAG;KAAY,EAAE,MAAM,CAAC;QAAC;QAAG;KAAI;IAEvE,MAAM,WAAW,OAAO,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM;QAC1C,qBACE,8OAAC;;8BACC,8OAAC;oBAEC,IAAI,OAAO;oBACX,IAAI,OAAO;oBACX,IAAI;oBACJ,IAAI,eAAe;oBACnB,QAAO;mBALF,CAAC,KAAK,EAAE,GAAG;;;;;8BAOlB,8OAAC;oBAEC,GAAG,OAAO;oBACV,GAAG,eAAe;oBAClB,UAAU;oBACV,YAAW;8BAEV,OAAO;mBANH,CAAC,IAAI,EAAE,GAAG;;;;;;WAVX,CAAC,KAAK,EAAE,GAAG;;;;;IAoBvB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,QAAQ;YACV,QAAQ,GAAG,CAAC;QACd;QACA,MAAM,UAAU,QAAQ,WAAW;QAEnC,IAAI,CAAC,SAAS;YACZ;QACF;QAEA,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,EAAE,EAAG;YACpC,QAAQ,SAAS,GAAG,MAAM,UAAU,CAAC,AAAC,MAAM,IAAK;YACjD,QAAQ,QAAQ,CAAC,GAAG,GAAG,GAAG;QAC5B;IACF,GAAG;QAAC,MAAM,KAAK;QAAE,MAAM,MAAM;QAAE,MAAM,UAAU;KAAC;IAEhD,qBACE,8OAAC;QAAI,OAAO;YAAE;YAAO;QAAO;kBAC1B,cAAA,8OAAC;YACC,OAAO;gBACL,UAAU;gBACV,WAAW,CAAC,UAAU,EAAE,oBAAoB,IAAI,CAAC;YAC/C,EAAE,oBAAoB,GAAG,CAAC,EAAE,CAAC;YACjC;;8BAEA,8OAAC;oBAAO,KAAK;oBAAW,OAAO;oBAAa,QAAQ;;;;;;8BACpD,8OAAC;oBACC,OAAO;oBACP,QAAQ;oBACR,OAAO;wBAAE,UAAU;wBAAY,KAAK;wBAAG,MAAM;wBAAG,UAAU;oBAAU;8BAEnE;;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/heatmapcell.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\nimport * as d3 from \"d3\"\nimport ColorLegend from \"../components/colorscale\"\n\n// const colorScale = d3\n//   .scaleSequential()\n//   .interpolator(d3.interpolateRdYlGn)\n//   .domain([16, 0]);\n\nexport default function HeatmapCell({x, y, width, height, colorScale, data, isActive, handleHover}) {\n    // const [isHovered, setHovered] = useState(false)\n    if (isActive) {\n        \n    }\n    const magnify = 10\n    const values = data.values\n\n    // function handleHover(event){\n    //     setHovered((oldState) => !oldState)\n    //     d3.select(event.target.parentNode).raise();\n    // }\n\n    values.sort((a, b) => a - b);\n\n    function getMedian(sorted_array) {\n        if (sorted_array.length === 0) {\n          return 0\n        }\n            \n        const mid = Math.floor(sorted_array.length / 2);\n      \n        if (sorted_array.length % 2 === 0) {\n          return (sorted_array[mid - 1] + sorted_array[mid]) / 2;\n        } else {\n          return sorted_array[mid];\n        }\n      }\n\n    const min_benchmark_value = values[0]\n    const median_benchmark_value = getMedian(values)\n    const max_benchmark_value = values[values.length - 1]\n\n    return (\n        <g>\n            <defs>\n                <linearGradient id={`linear-gradient-${x}-${y}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor={colorScale(min_benchmark_value)} />\n                    <stop offset=\"50%\" stopColor={colorScale(median_benchmark_value)} />\n                    <stop offset=\"100%\" stopColor={colorScale(max_benchmark_value)} />\n                </linearGradient>\n            </defs>\n            <rect\n                rx=\"4\" // round the corners\n                x={isActive ? x - magnify/2 : x}\n                y={isActive ? y - magnify/2 : y}\n                width={isActive ? width + magnify : width}\n                height={isActive ? height + magnify : height}\n                fill={`url(#linear-gradient-${x}-${y})`}\n                stroke=\"black\"\n                strokeWidth={isActive ? \"2px\" : \"0px\"}\n                onMouseEnter={(event) => handleHover(event, data.time, data.resource_type)}\n                onMouseLeave={(event) => handleHover(event, data.time, data.resource_type)}\n            >\n            </rect>\n            <text\n                x={isActive ? x - magnify/2 + ((width+magnify) / 2) : x}\n                y={isActive ? y + magnify/2 : y}\n                textAnchor=\"middle\"\n                pointerEvents=\"none\"\n                fontSize={10}\n            >\n                {isActive && values ? median_benchmark_value.toFixed(1) + \"s\" : \"\"}\n            </text>\n        </g>\n    );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAOe,SAAS,YAAY,EAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAC;IAC9F,kDAAkD;IAClD,IAAI,UAAU,CAEd;IACA,MAAM,UAAU;IAChB,MAAM,SAAS,KAAK,MAAM;IAE1B,+BAA+B;IAC/B,0CAA0C;IAC1C,kDAAkD;IAClD,IAAI;IAEJ,OAAO,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI;IAE1B,SAAS,UAAU,YAAY;QAC3B,IAAI,aAAa,MAAM,KAAK,GAAG;YAC7B,OAAO;QACT;QAEA,MAAM,MAAM,KAAK,KAAK,CAAC,aAAa,MAAM,GAAG;QAE7C,IAAI,aAAa,MAAM,GAAG,MAAM,GAAG;YACjC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,IAAI,IAAI;QACvD,OAAO;YACL,OAAO,YAAY,CAAC,IAAI;QAC1B;IACF;IAEF,MAAM,sBAAsB,MAAM,CAAC,EAAE;IACrC,MAAM,yBAAyB,UAAU;IACzC,MAAM,sBAAsB,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;IAErD,qBACI,8OAAC;;0BACG,8OAAC;0BACG,cAAA,8OAAC;oBAAe,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,GAAG;oBAAE,IAAG;oBAAK,IAAG;oBAAK,IAAG;oBAAK,IAAG;;sCACxE,8OAAC;4BAAK,QAAO;4BAAK,WAAW,WAAW;;;;;;sCACxC,8OAAC;4BAAK,QAAO;4BAAM,WAAW,WAAW;;;;;;sCACzC,8OAAC;4BAAK,QAAO;4BAAO,WAAW,WAAW;;;;;;;;;;;;;;;;;0BAGlD,8OAAC;gBACG,IAAG,IAAI,oBAAoB;;gBAC3B,GAAG,WAAW,IAAI,UAAQ,IAAI;gBAC9B,GAAG,WAAW,IAAI,UAAQ,IAAI;gBAC9B,OAAO,WAAW,QAAQ,UAAU;gBACpC,QAAQ,WAAW,SAAS,UAAU;gBACtC,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACvC,QAAO;gBACP,aAAa,WAAW,QAAQ;gBAChC,cAAc,CAAC,QAAU,YAAY,OAAO,KAAK,IAAI,EAAE,KAAK,aAAa;gBACzE,cAAc,CAAC,QAAU,YAAY,OAAO,KAAK,IAAI,EAAE,KAAK,aAAa;;;;;;0BAG7E,8OAAC;gBACG,GAAG,WAAW,IAAI,UAAQ,IAAK,CAAC,QAAM,OAAO,IAAI,IAAK;gBACtD,GAAG,WAAW,IAAI,UAAQ,IAAI;gBAC9B,YAAW;gBACX,eAAc;gBACd,UAAU;0BAET,YAAY,SAAS,uBAAuB,OAAO,CAAC,KAAK,MAAM;;;;;;;;;;;;AAIhF"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/heatmap.jsx"],"sourcesContent":["import * as d3 from \"d3\"\nimport { useMemo } from \"react\"\nimport HeatmapCell from \"../components/heatmapcell\"\n\nconst MARGIN = { top: 30, right: 50, bottom: 100, left: 90 };\n\nexport default function Heatmap(props) {\n\n    const boundsWidth = props.width - MARGIN.right - MARGIN.left;\n    const boundsHeight = props.height - MARGIN.top - MARGIN.bottom;\n\n    const yAxisElements = [\"H100\", \"A100-80GB\", \"A100\", \"L40S\", \"A10G\", \"L4\", \"T4\"]    \n    const xAxisElements = useMemo(() => [...new Set(props.data.map((d) => d.time))], [props.data])\n\n    const yScale = useMemo(() => {\n        return d3\n          .scaleBand()\n          .range([0, boundsHeight])\n          .domain(yAxisElements)\n          .padding(0.01);\n    }, [props.data, props.width]);\n\n    const xScale = useMemo(() => {\n        return d3\n          .scaleBand()\n          .range([0, boundsWidth])\n          .domain(xAxisElements)\n          .padding(0.01);\n    }, [props.data, props.width]);\n    \n    const yLabels = yAxisElements.map((name, i) => {\n        const yPos = yScale(name) ?? 0;\n        return (\n            <text\n            key={i}\n            x={-5}\n            y={yPos + yScale.bandwidth() / 2}\n            textAnchor=\"end\"\n            dominantBaseline=\"middle\"\n            fontSize={15}\n            >\n            {name}\n            </text>\n        );\n    });\n\n    const xLabels = xAxisElements.map((name, i) => {\n        const xPos = xScale(name) ?? 0;\n\n        const dt_element = new Date(name * 1000)\n        const date_formatted = `${dt_element.toLocaleString('default', { month: 'short' })}${dt_element.getDate()} ${dt_element.getHours()}:${String(dt_element.getMinutes()).padStart(2, '0')}`\n\n        return (\n            <text\n            key={i}\n            x={xPos + 15}\n            y={boundsHeight + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"middle\"\n            fontSize={10}\n            transform={`rotate(-45 ${xPos + xScale.bandwidth() / 2} ${boundsHeight + 10})`}\n            >\n            {date_formatted}\n            </text>\n        );\n    });\n\n    const allRects = props.data.map((d, i) => useMemo(() => {\n        if (d.values === null) {\n            return;\n        }\n        \n        const isActive = props.activeIndex && d.time === props.activeIndex[0] && d.resource_type === props.activeIndex[1]\n\n        return (\n            <HeatmapCell\n                key={i}\n                x={xScale(d.time) + 0.5}\n                y={yScale(d.resource_type) + 0.5}\n                width={xScale.bandwidth() - 1}\n                height={yScale.bandwidth() - 1}\n                colorScale={props.colorScale}\n                data={d}\n                isActive={isActive}\n                handleHover={props.handleHover}\n            />\n        );\n    }, [props.activeIndex]\n\n    ))\n    \n    \n    \n    // {\n    //     if (d.values === null) {\n    //         return;\n    //     }\n        \n    //     const isActive = props.activeIndex && d.time === props.activeIndex[0] && d.resource_type === props.activeIndex[1]\n\n    //     return (\n    //         <HeatmapCell\n    //             key={i}\n    //             x={xScale(d.time) + 0.5}\n    //             y={yScale(d.resource_type) + 0.5}\n    //             width={xScale.bandwidth() - 1}\n    //             height={yScale.bandwidth() - 1}\n    //             colorScale={props.colorScale}\n    //             data={d}\n    //             isActive={isActive}\n    //             handleHover={props.handleHover}\n    //         />\n    //     );\n    // });\n\n    return (\n        <div>\n            <svg width={props.width} height={props.height}>\n                <g\n                    width={boundsWidth}\n                    height={boundsHeight}\n                    transform={`translate(${[MARGIN.left, MARGIN.top].join(\",\")})`}\n                >\n                {allRects}\n                {xLabels}\n                {yLabels}\n                </g>\n            </svg>\n        </div>\n    )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/app/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\"\nimport { useQuery } from \"convex/react\";\nimport { api } from \"../convex/_generated/api\";\nimport * as d3 from \"d3\";\n\nimport Heatmap from \"../components/heatmap\"\nimport ColorLegend from \"../components/colorscale\"\n\nconst colorScale = d3\n  .scaleSequential()\n  .interpolator(d3.interpolateRdYlGn)\n  .domain([16, 0]);\n\nconst GPU_TYPES = [\"H100\", \"A100-80GB\", \"A100\", \"L40S\", \"A10G\", \"L4\", \"T4\"]\n\nexport default function Home() {\n  const [activeIndex, setActiveIndex] = useState(null);\n  const queue_times = useQuery(api.queue_times.get)\n\n  if (!queue_times) {\n    return\n  }\n\n  queue_times.sort((a, b) => b.time - a.time)\n\n  const queue_times_bucket_to_gpu_samples = {}\n\n  const min_time = queue_times[queue_times.length - 1].time\n\n  const time_markers = []\n  for (let i=min_time; i <= Math.floor(Date.now() / 1000); i += (60 * 60 * 3)) {\n    time_markers.push(i)\n  }\n\n  // Get rid of old time markers, we only want to show what can fit the page\n  const time_markers_sliced = time_markers.slice(-40)\n\n  for (const time_marker of time_markers_sliced) {\n    queue_times_bucket_to_gpu_samples[time_marker] = {}\n    GPU_TYPES.forEach(gpu_type => {\n      queue_times_bucket_to_gpu_samples[time_marker][gpu_type] = []\n    })\n  }\n\n  const recent_queue_times = queue_times.filter(item => item.time >= time_markers_sliced[0]);\n\n  // for (let i=min_time; i <= Math.floor(Date.now() / 1000); i += (60 * 60 * 3)) {\n  //   time_markers.push(i)\n  //   queue_times_bucket_to_gpu_samples[i] = {}\n  //   GPU_TYPES.forEach(gpu_type => {\n  //     queue_times_bucket_to_gpu_samples[i][gpu_type] = []\n  //   })\n  // }\n  // time_markers.reverse()\n\n  // // Get rid of old time markers, we only want to show what can fit the page\n  // const time_markers_sliced = time_markers.slice(0,40)\n\n  time_markers_sliced.reverse()\n  let current_time_marker_index = 0\n  let current_time_marker = time_markers_sliced[current_time_marker_index]\n  console.log(queue_times_bucket_to_gpu_samples)\n  console.log(time_markers_sliced)\n  console.log(recent_queue_times)\n  // Aggregate the data points into buckets of time\n  for (const queue_time of recent_queue_times) {\n    while (queue_time.time < current_time_marker) {\n      current_time_marker_index++\n      current_time_marker = time_markers_sliced[current_time_marker_index]\n    }\n    console.log(current_time_marker)\n    queue_times_bucket_to_gpu_samples[current_time_marker][queue_time.resource_type].push(queue_time.value)\n  }\n\n  // Reconstruct data as an array of objects, where each object contains gpu type, benchmark time, timestamp\n  const queue_types_bucketed = []\n  for (const [queue_time_key, gpu_samples] of Object.entries(queue_times_bucket_to_gpu_samples)) {\n    for (const [gpu_sample_key, bucketed_benchmark_values] of Object.entries(gpu_samples)) {\n      queue_types_bucketed.push({\n        \"resource_type\": gpu_sample_key,\n        \"time\": queue_time_key,\n        \"values\": bucketed_benchmark_values\n      })\n    }\n  }\n\n  function handleHover(event, time, resource_type) {\n    if (event.type === 'mouseenter') {\n      setActiveIndex(() => [time, resource_type])\n    } else {\n      setActiveIndex(() => null)\n    }\n    d3.select(event.target.parentNode).raise();\n  }\n\n  let sample_string = \"[hover over a cell]\"\n  if (activeIndex) {\n    sample_string = queue_times_bucket_to_gpu_samples[activeIndex[0]][activeIndex[1]].toSorted().map(num => num.toFixed(1) + \"s\").join(\", \")\n  }\n  \n  return (\n    <main>\n      <h1>How quickly can you get a GPU on Modal?</h1>\n      <p>Median TTYCR (time to your code running) sampled on each of our GPU types 🏎️</p>\n      <div className=\"heatmap-container\">\n        {queue_times && <Heatmap\n          width={time_markers_sliced.length * 40}\n          height={400}\n          data={queue_types_bucketed}\n          colorScale={colorScale}\n          activeIndex={activeIndex}\n          handleHover={handleHover}\n        />\n        }\n        <p>Samples taken inside this time bucket: {sample_string}</p>\n        <ColorLegend\n          width={700}\n          height={100}\n          colorScale={colorScale}\n        />\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}