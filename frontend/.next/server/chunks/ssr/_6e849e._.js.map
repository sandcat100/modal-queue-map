{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,sJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,sJAAA,CAAA,SAAM"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/heatmapcell.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\nimport * as d3 from \"d3\"\n\nconst colorScale = d3\n  .scaleSequential()\n  .interpolator(d3.interpolateRdYlGn)\n  .domain([16, 0]);\n\nexport default function HeatmapCell({x, y, width, height, fill, value}) {\n\n    const [isHovered, setHovered] = useState(false)\n    const magnify = 10\n\n    const canvasRef = useRef(null);\n\n\n    function handleHover(event){\n        console.log(value)\n        setHovered((oldState) => !oldState)\n        d3.select(event.target.parentNode).raise();\n    }\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n\n        if (canvas) {\n            console.log(canvas.getContext(\"2d\"))\n        }\n\n        const context = canvas?.getContext(\"2d\");\n    \n        if (!context) {\n          return;\n        }\n    \n        for (let i = value; i <= 8; i += (value2/value) / 3) {\n          context.fillStyle = colorScale(i)\n          context.fillRect(0, ((i / value) * height/3 ), width, height/3);\n        }\n      }, [width, height]);\n\n\n    return (\n        <ColorLegend\n          width={700}\n          height={100}\n          colorScale={colorScale}\n        />\n\n\n    //     <div style={{ width, height }}>\n    //     <div\n    //       style={{\n    //         position: \"relative\",\n    //         transform: `translate(50px,\n    //           50px`,\n    //       }}\n    //     >\n    //       <canvas ref={canvasRef} width={width} height={height} />\n    //       <svg\n    //         width={width}\n    //         height={height}\n    //         style={{ position: \"absolute\", top: 0, left: 0, overflow: \"visible\" }}\n    //       >\n    //         hello\n    //       </svg>\n    //     </div>\n    //   </div>\n\n\n\n        // <g>\n        //     {/* <rect\n        //         rx=\"4\" // round the corners\n        //         x={isHovered ? x - magnify/2 : x}\n        //         y={isHovered ? y - magnify/2 : y}\n        //         width={isHovered ? width + magnify : width}\n        //         height={isHovered ? height + magnify : height}\n        //         fill={fill}\n        //         stroke=\"black\"\n        //         strokeWidth={isHovered ? \"2px\" : \"0px\"}\n        //         onMouseEnter={handleHover}\n        //         onMouseLeave={handleHover}\n        //     >\n        //     </rect> */}\n        //     <canvas ref={canvasRef} width={width} height={height} />\n        //     {/* <text\n        //         x={isHovered ? x - magnify/2 + ((width+magnify) / 2) : x}\n        //         y={isHovered ? y + magnify/2 : y}\n        //         textAnchor=\"middle\"\n        //         pointerEvents=\"none\"\n        //         fontSize={10}\n        //     >\n        //         {isHovered && value ? value.toFixed(1) + \"s\" : \"\"}\n        //     </text> */}\n        // </g>\n    );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEA,MAAM,aAAa,mIAChB,eAAe,GACf,YAAY,CAAC,mIAAG,iBAAiB,EACjC,MAAM,CAAC;IAAC;IAAI;CAAE;AAEF,SAAS,YAAY,EAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAC;IAElE,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,UAAU;IAEhB,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAGzB,SAAS,YAAY,KAAK;QACtB,QAAQ,GAAG,CAAC;QACZ,WAAW,CAAC,WAAa,CAAC;QAC1B,mIAAG,MAAM,CAAC,MAAM,MAAM,CAAC,UAAU,EAAE,KAAK;IAC5C;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,SAAS,UAAU,OAAO;QAEhC,IAAI,QAAQ;YACR,QAAQ,GAAG,CAAC,OAAO,UAAU,CAAC;QAClC;QAEA,MAAM,UAAU,QAAQ,WAAW;QAEnC,IAAI,CAAC,SAAS;YACZ;QACF;QAEA,IAAK,IAAI,IAAI,OAAO,KAAK,GAAG,KAAK,AAAC,SAAO,QAAS,EAAG;YACnD,QAAQ,SAAS,GAAG,WAAW;YAC/B,QAAQ,QAAQ,CAAC,GAAI,AAAC,IAAI,QAAS,SAAO,GAAK,OAAO,SAAO;QAC/D;IACF,GAAG;QAAC;QAAO;KAAO;IAGpB,qBACI,8OAAC;QACC,OAAO;QACP,QAAQ;QACR,YAAY;;;;;;AAmDtB"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/heatmap.jsx"],"sourcesContent":["import * as d3 from \"d3\"\nimport { useMemo } from \"react\"\nimport HeatmapCell from \"../components/heatmapcell\"\n\nconst MARGIN = { top: 30, right: 50, bottom: 100, left: 90 };\n\nexport default function Heatmap(props) {\n\n    const boundsWidth = props.width - MARGIN.right - MARGIN.left;\n    const boundsHeight = props.height - MARGIN.top - MARGIN.bottom;\n\n    const yAxisElements = [\"H100\", \"A100-80GB\", \"A100\", \"L40S\", \"A10G\", \"L4\", \"T4\"]    \n    const xAxisElements = useMemo(() => [...new Set(props.data.map((d) => d.time))], [props.data])\n\n    const yScale = useMemo(() => {\n        return d3\n          .scaleBand()\n          .range([0, boundsHeight])\n          .domain(yAxisElements)\n          .padding(0.01);\n    }, [props.data, props.width]);\n\n    const xScale = useMemo(() => {\n        return d3\n          .scaleBand()\n          .range([0, boundsWidth])\n          .domain(xAxisElements)\n          .padding(0.01);\n    }, [props.data, props.width]);\n    \n    const yLabels = yAxisElements.map((name, i) => {\n        const yPos = yScale(name) ?? 0;\n        return (\n            <text\n            key={i}\n            x={-5}\n            y={yPos + yScale.bandwidth() / 2}\n            textAnchor=\"end\"\n            dominantBaseline=\"middle\"\n            fontSize={15}\n            >\n            {name}\n            </text>\n        );\n    });\n\n    const xLabels = xAxisElements.map((name, i) => {\n        const xPos = xScale(name) ?? 0;\n\n        const dt_element = new Date(name * 1000)\n        const date_formatted = `${dt_element.toLocaleString('default', { month: 'short' })}${dt_element.getDate()} ${dt_element.getHours()}:${String(dt_element.getMinutes()).padStart(2, '0')}`\n\n        return (\n            <text\n            key={i}\n            x={xPos + 15}\n            y={boundsHeight + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"middle\"\n            fontSize={10}\n            transform={`rotate(-45 ${xPos + xScale.bandwidth() / 2} ${boundsHeight + 10})`}\n            >\n            {date_formatted}\n            </text>\n        );\n    });\n\n    const allRects = props.data.map((d, i) => {\n        if (d.value === null) {\n            return;\n        }\n        return (\n            <HeatmapCell\n                key={i}\n                x={xScale(d.time) + 0.5}\n                y={yScale(d.resource_type) + 0.5}\n                width={xScale.bandwidth() - 1}\n                height={yScale.bandwidth() - 1}\n                fill={props.colorScale(d.value)}\n                value={d.value}\n            />\n        );\n    });\n\n    return (\n        <div>\n            <svg width={props.width} height={props.height}>\n                <g\n                    width={boundsWidth}\n                    height={boundsHeight}\n                    transform={`translate(${[MARGIN.left, MARGIN.top].join(\",\")})`}\n                >\n                {allRects}\n                {xLabels}\n                {yLabels}\n                </g>\n            </svg>\n        </div>\n    )\n}\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;;;;;AAIA,MAAM,SAAS;IAAE,KAAK;IAAI,OAAO;IAAI,QAAQ;IAAK,MAAM;AAAG;AAE5C,SAAS,QAAQ,KAAK;IAEjC,MAAM,cAAc,MAAM,KAAK,GAAG,OAAO,KAAK,GAAG,OAAO,IAAI;IAC5D,MAAM,eAAe,MAAM,MAAM,GAAG,OAAO,GAAG,GAAG,OAAO,MAAM;IAE9D,MAAM,gBAAgB;QAAC;QAAQ;QAAa;QAAQ;QAAQ;QAAQ;QAAM;KAAK;IAC/E,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM;eAAI,IAAI,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;SAAG,EAAE;QAAC,MAAM,IAAI;KAAC;IAE7F,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACnB,OAAO,mIACJ,SAAS,GACT,KAAK,CAAC;YAAC;YAAG;SAAa,EACvB,MAAM,CAAC,eACP,OAAO,CAAC;IACf,GAAG;QAAC,MAAM,IAAI;QAAE,MAAM,KAAK;KAAC;IAE5B,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACnB,OAAO,mIACJ,SAAS,GACT,KAAK,CAAC;YAAC;YAAG;SAAY,EACtB,MAAM,CAAC,eACP,OAAO,CAAC;IACf,GAAG;QAAC,MAAM,IAAI;QAAE,MAAM,KAAK;KAAC;IAE5B,MAAM,UAAU,cAAc,GAAG,CAAC,CAAC,MAAM;QACrC,MAAM,OAAO,OAAO,SAAS;QAC7B,qBACI,8OAAC;YAED,GAAG,CAAC;YACJ,GAAG,OAAO,OAAO,SAAS,KAAK;YAC/B,YAAW;YACX,kBAAiB;YACjB,UAAU;sBAET;WAPI;;;;;IAUb;IAEA,MAAM,UAAU,cAAc,GAAG,CAAC,CAAC,MAAM;QACrC,MAAM,OAAO,OAAO,SAAS;QAE7B,MAAM,aAAa,IAAI,KAAK,OAAO;QACnC,MAAM,iBAAiB,GAAG,WAAW,cAAc,CAAC,WAAW;YAAE,OAAO;QAAQ,KAAK,WAAW,OAAO,GAAG,CAAC,EAAE,WAAW,QAAQ,GAAG,CAAC,EAAE,OAAO,WAAW,UAAU,IAAI,QAAQ,CAAC,GAAG,MAAM;QAExL,qBACI,8OAAC;YAED,GAAG,OAAO;YACV,GAAG,eAAe;YAClB,YAAW;YACX,kBAAiB;YACjB,UAAU;YACV,WAAW,CAAC,WAAW,EAAE,OAAO,OAAO,SAAS,KAAK,EAAE,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC;sBAE7E;WARI;;;;;IAWb;IAEA,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG;QAChC,IAAI,EAAE,KAAK,KAAK,MAAM;YAClB;QACJ;QACA,qBACI,8OAAC,0HAAA,CAAA,UAAW;YAER,GAAG,OAAO,EAAE,IAAI,IAAI;YACpB,GAAG,OAAO,EAAE,aAAa,IAAI;YAC7B,OAAO,OAAO,SAAS,KAAK;YAC5B,QAAQ,OAAO,SAAS,KAAK;YAC7B,MAAM,MAAM,UAAU,CAAC,EAAE,KAAK;YAC9B,OAAO,EAAE,KAAK;WANT;;;;;IASjB;IAEA,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAI,OAAO,MAAM,KAAK;YAAE,QAAQ,MAAM,MAAM;sBACzC,cAAA,8OAAC;gBACG,OAAO;gBACP,QAAQ;gBACR,WAAW,CAAC,UAAU,EAAE;oBAAC,OAAO,IAAI;oBAAE,OAAO,GAAG;iBAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;oBAEjE;oBACA;oBACA;;;;;;;;;;;;;;;;;AAKjB"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/components/colorscale.jsx"],"sourcesContent":["import * as d3 from \"d3\";\nimport { useEffect, useRef } from \"react\";\n\nconst COLOR_LEGEND_MARGIN = { top: 38, right: 0, bottom: 38, left: 90 };\n\nexport default function ColorLegend(props) {\n  const width = props.width\n  const height = props.height\n\n  const canvasRef = useRef(null);\n\n  const boundsWidth =\n    props.width - COLOR_LEGEND_MARGIN.right - COLOR_LEGEND_MARGIN.left;\n  const boundsHeight =\n    props.height - COLOR_LEGEND_MARGIN.top - COLOR_LEGEND_MARGIN.bottom;\n\n  const domain = props.colorScale.domain();\n  const max = domain[0];\n  const xScale = d3.scaleLinear().range([0, boundsWidth]).domain([0, max]);\n\n  const allTicks = xScale.ticks(9).map((tick, i) => {\n    return (\n      <g key={`tick-${i}`}>\n        <line\n          key={`line-${i}`}\n          x1={xScale(tick)}\n          x2={xScale(tick)}\n          y1={0}\n          y2={boundsHeight + 10}\n          stroke=\"black\"\n        />\n        <text\n          key={`key-${i}`}\n          x={xScale(tick)}\n          y={boundsHeight + 25}\n          fontSize={10}\n          textAnchor=\"middle\"\n        >\n          {tick + \"s\"}\n        </text>\n      </g>\n    );\n  });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      console.log(canvas)\n    }\n    const context = canvas?.getContext(\"2d\");\n\n    if (!context) {\n      return;\n    }\n\n    for (let i = 0; i < boundsWidth; ++i) {\n      context.fillStyle = props.colorScale((max * i) / boundsWidth);\n      context.fillRect(i, 0, 1, boundsHeight);\n    }\n  }, [props.width, props.height, props.colorScale]);\n\n  return (\n    <div style={{ width, height }}>\n      <div\n        style={{\n          position: \"relative\",\n          transform: `translate(${COLOR_LEGEND_MARGIN.left}px,\n            ${COLOR_LEGEND_MARGIN.top}px`,\n        }}\n      >\n        <canvas ref={canvasRef} width={boundsWidth} height={boundsHeight} />\n        <svg\n          width={boundsWidth}\n          height={boundsHeight}\n          style={{ position: \"absolute\", top: 0, left: 0, overflow: \"visible\" }}\n        >\n          {allTicks}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;;AAGA,MAAM,sBAAsB;IAAE,KAAK;IAAI,OAAO;IAAG,QAAQ;IAAI,MAAM;AAAG;AAEvD,SAAS,YAAY,KAAK;IACvC,MAAM,QAAQ,MAAM,KAAK;IACzB,MAAM,SAAS,MAAM,MAAM;IAE3B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEzB,MAAM,cACJ,MAAM,KAAK,GAAG,oBAAoB,KAAK,GAAG,oBAAoB,IAAI;IACpE,MAAM,eACJ,MAAM,MAAM,GAAG,oBAAoB,GAAG,GAAG,oBAAoB,MAAM;IAErE,MAAM,SAAS,MAAM,UAAU,CAAC,MAAM;IACtC,MAAM,MAAM,MAAM,CAAC,EAAE;IACrB,MAAM,SAAS,mIAAG,WAAW,GAAG,KAAK,CAAC;QAAC;QAAG;KAAY,EAAE,MAAM,CAAC;QAAC;QAAG;KAAI;IAEvE,MAAM,WAAW,OAAO,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM;QAC1C,qBACE,8OAAC;;8BACC,8OAAC;oBAEC,IAAI,OAAO;oBACX,IAAI,OAAO;oBACX,IAAI;oBACJ,IAAI,eAAe;oBACnB,QAAO;mBALF,CAAC,KAAK,EAAE,GAAG;;;;;8BAOlB,8OAAC;oBAEC,GAAG,OAAO;oBACV,GAAG,eAAe;oBAClB,UAAU;oBACV,YAAW;8BAEV,OAAO;mBANH,CAAC,IAAI,EAAE,GAAG;;;;;;WAVX,CAAC,KAAK,EAAE,GAAG;;;;;IAoBvB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,QAAQ;YACV,QAAQ,GAAG,CAAC;QACd;QACA,MAAM,UAAU,QAAQ,WAAW;QAEnC,IAAI,CAAC,SAAS;YACZ;QACF;QAEA,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,EAAE,EAAG;YACpC,QAAQ,SAAS,GAAG,MAAM,UAAU,CAAC,AAAC,MAAM,IAAK;YACjD,QAAQ,QAAQ,CAAC,GAAG,GAAG,GAAG;QAC5B;IACF,GAAG;QAAC,MAAM,KAAK;QAAE,MAAM,MAAM;QAAE,MAAM,UAAU;KAAC;IAEhD,qBACE,8OAAC;QAAI,OAAO;YAAE;YAAO;QAAO;kBAC1B,cAAA,8OAAC;YACC,OAAO;gBACL,UAAU;gBACV,WAAW,CAAC,UAAU,EAAE,oBAAoB,IAAI,CAAC;YAC/C,EAAE,oBAAoB,GAAG,CAAC,EAAE,CAAC;YACjC;;8BAEA,8OAAC;oBAAO,KAAK;oBAAW,OAAO;oBAAa,QAAQ;;;;;;8BACpD,8OAAC;oBACC,OAAO;oBACP,QAAQ;oBACR,OAAO;wBAAE,UAAU;wBAAY,KAAK;wBAAG,MAAM;wBAAG,UAAU;oBAAU;8BAEnE;;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///Users/margaret/modal-queue-map/frontend/app/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"convex/react\";\nimport { api } from \"../convex/_generated/api\";\nimport * as d3 from \"d3\";\n\nimport Heatmap from \"../components/heatmap\"\nimport ColorLegend from \"../components/colorscale\"\n\nconst colorScale = d3\n  .scaleSequential()\n  .interpolator(d3.interpolateRdYlGn)\n  .domain([16, 0]);\n\nexport default function Home() {\n  const queue_times = useQuery(api.queue_times.get)\n  \n  return (\n    <main>\n      <h1>How quickly can you get a GPU on Modal?</h1>\n      <p>Sampling TTYCR (time to your code running) on each of our GPU types 🏎️</p>\n      <div className=\"heatmap-container\">\n        {queue_times && <Heatmap\n          width={1600}\n          height={400}\n          data={queue_times}\n          colorScale={colorScale}\n        />\n        }\n        <ColorLegend\n          width={700}\n          height={100}\n          colorScale={colorScale}\n        />\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AAHA;AAFA;AAFA;;;;;;;AASA,MAAM,aAAa,mIAChB,eAAe,GACf,YAAY,CAAC,mIAAG,iBAAiB,EACjC,MAAM,CAAC;IAAC;IAAI;CAAE;AAEF,SAAS;IACtB,MAAM,cAAc,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE,2HAAA,CAAA,MAAG,CAAC,WAAW,CAAC,GAAG;IAEhD,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;0BAAE;;;;;;0BACH,8OAAC;gBAAI,WAAU;;oBACZ,6BAAe,8OAAC,sHAAA,CAAA,UAAO;wBACtB,OAAO;wBACP,QAAQ;wBACR,MAAM;wBACN,YAAY;;;;;;kCAGd,8OAAC,yHAAA,CAAA,UAAW;wBACV,OAAO;wBACP,QAAQ;wBACR,YAAY;;;;;;;;;;;;;;;;;;AAKtB"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}